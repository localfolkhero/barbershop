"""
Django settings for barbershop project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SITE_ID = 1

# ---- These two lines load the .env file to create environment variables
import os
from dotenv import load_dotenv

load_dotenv(verbose=True)
# ---- Remove ^^^^^ or the .env file to operate only from environment variables


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-m6cz4_mn*#rf-p)62-ipn+)@=xxvsm0$kb851^e-lkb5$h2o2%')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = 'PROD' not in os.getenv('ENVIRONMENT', 'DEV' )

# TODO: move ALLOWED_HOSTS and CSRF_TRUSTED_ORIGINS to env
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost,127.0.0.1' ).split(',')

CSRF_TRUSTED_ORIGINS = os.getenv('CSRF_TRUSTED_ORIGINS', 'https://*.127.0.0.1,https://localhost' ).split(',')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'musicgen', # the music generator app
    
    # Social Auth / SSO
    "allauth_ui",  # <-- for UI improvements
    "allauth",  # <-- core aull-auth
    "allauth.account",  # <-- core aull-auth
    "allauth.socialaccount",  # <-- core aull-auth
    "allauth.socialaccount.providers.google",  # <-- for google idp
    "widget_tweaks",  # all-auth-ui
    
    "slippers",         # Required for allauth(ui)
    
    # Django Debug Toolbar
    "debug_toolbar", 
    
]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'login_required.middleware.LoginRequiredMiddleware', # Has to be after AuthenticationMiddleware
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware'
]

ROOT_URLCONF = 'barbershop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'barbershop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": os.getenv("DEFAULT_DATABASE_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.getenv("DEFAULT_DATABASE_NAME", BASE_DIR / "db.sqlite3"),
        "USER": os.getenv("DEFAULT_DATABASE_USER"),
        "PASSWORD": os.getenv("DEFAULT_DATABASE_PASSWORD"),
        "HOST": os.getenv("DEFAULT_DATABASE_HOST"),
        "PORT": os.getenv("DEFAULT_DATABASE_PORT"),
        # "CONN_MAX_AGE": os.getenv("DEFAULT_DATABASE_MAX_AGE", 300), # 0 is default behavior
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_ROOT = BASE_DIR / 'staticfiles'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATIC_URL = 'static/'

# STATICFILES_STORAGE = 'barbershop.storage_backends.GoogleCloudStaticStorage'
# STATIC_URL = 'https://storage.googleapis.com/{}/'.format(GS_STATIC_BUCKET_NAME)
# GS_STATIC_BUCKET_NAME = 'bproject-static'


os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = os.getenv("GOOGLE_BUCKET_SECRETS_FILE", '../secrets.json') 

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# For login_required.middleware.LoginRequiredMiddleware
LOGIN_REQUIRED_IGNORE_PATHS = [
    r'/accounts/',
    r'/admin/$',
    r'/static/',
]

LOGIN_REQUIRED_IGNORE_VIEW_NAMES = [
    # 'index',
    'accounts:login'
]

LOGIN_REDIRECT_URL = "/"

# For Social Auth / SSO
AUTHENTICATION_BACKENDS = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)

ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
        # "APP": {
        #     "client_id": os.getenv("GOOGLE_CLIENT_ID"),
        #     "secret": os.getenv("GOOGLE_SECRET"),
        #     "key": "",
        # },
    }
}


# --------- Logging ---------

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "standard": {"format": "%(asctime)s [%(levelname)s] %(name)s: %(message)s"},
    },
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.handlers.RotatingFileHandler",
            "filename": "debug.log",
            "maxBytes": 1024 * 1024 * 5,  # 5 MB
            "backupCount": 5,
            "formatter": "standard",
        },
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console", "file"],
        "level": "INFO",
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "propagate": True,
        },
    },
}

# Django Debug Toolbar options
INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

# ------ Email ------
DEFAULT_FROM_EMAIL=os.getenv('DEFAULT_FROM_EMAIL', 'localhost@locahost' )
EMAIL_HOST=os.getenv('EMAIL_HOST', 'localhost' )
EMAIL_HOST_USER=os.getenv('EMAIL_HOST_USER', 'user' )
EMAIL_HOST_PASSWORD=os.getenv('EMAIL_HOST_PASSWORD', 'password' )
EMAIL_PORT=587
EMAIL_SUBJECT_PREFIX='[b-project] '
EMAIL_USE_TLS=True 
#EMAIL_USE_SSL=True 